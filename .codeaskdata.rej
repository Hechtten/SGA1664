diff a/.codeaskdata b/.codeaskdata	(rejected hunks)
@@ -0,0 +1,37 @@
+{
+  "plugins": {
+    "f69f9199-725c-4c43-b8e3-fd340e3f72d8": {
+      "pluginName": "代码解释",
+      "modelId": "995d4355-d802-4304-94f7-57f279d6f7e4",
+      "systemPrompt": "你是一个专业的代码分析助手，当用户提供代码文件时，请帮助用户迅速理解代码。假定用户对代码不熟悉，并希望快速了解项目的目的和实现方式。请按照以下结构化框架进行分析：\n\n1. 功能概述：用简明语言总结代码核心功能，描述代码实现目标、应用场景及主要模块，强调关键功能和用途。\n\n2. 代码结构分析：分析代码中关键函数、类和方法，简要说明它们的功能和作用；基于代码内容和结构，选择合适的 Mermaid 图表（流程图、时序图、类图或状态图）展示执行流程或模块关系，确保图表符合 Mermaid 语法。\n",
+      "userPrompt": "请根据上述结构化框架解释以下代码：",
+      "rules": {
+        "fileExtensions": [
+          ".c"
+        ],
+        "showProcessed": true,
+        "showUpdated": false
+      },
+      "files": [
+        {
+          "filename": "xclibex1.c",
+          "fileHash": "d7c6e7deae4c1fc8154e0680cd0f8674194315e9dd060d3df2a4c3ac51cd6231",
+          "result": " 让我帮你分析这段代码。\n\n\n\n1. 功能概述:\n这是一个用于 PIXCI 图像采集卡的 C 语言示例程序，主要功能包括:\n- 图像采集卡的初始化和配置\n- 单帧和序列图像采集\n- 图像数据读取和显示\n- 图像保存(支持 TIFF、BMP、JPEG 格式)\n- 通用输入输出(GPIO)信号控制\n- 错误处理和异常捕获\n\n关键特性:\n- 支持多种视频格式(RS-170、NTSC、PAL 等)\n- 支持彩色和黑白图像处理\n- 提供不同颜色空间的转换(RGB、YCrCb、BSH)\n- 包含完整的错误处理机制\n- 提供交互式的用户界面\n\n\n```mermaid \nstateDiagram-v2\n    [*] --> Initialization: 程序启动\n    \n    state Initialization {\n        [*] --> SignalHandler: 设置信号处理\n        SignalHandler --> OpenDevice: 配置中断和浮点异常处理\n        OpenDevice --> VideoConfig: 打开设备并配置视频格式\n    }\n    \n    Initialization --> ImageCapture: 初始化完成\n    \n    state ImageCapture {\n        [*] --> SingleFrame: 单帧采集\n        SingleFrame --> DataProcessing: 采集完成\n        [*] --> Sequence: 序列采集\n        Sequence --> DataProcessing: 采集完成\n    }\n    \n    state DataProcessing {\n        [*] --> ColorConversion: 彩色图像\n        [*] --> Monochrome: 黑白图像\n        ColorConversion --> ImageStorage: 处理完成\n        Monochrome --> ImageStorage: 处理完成\n    }\n    \n    state ImageStorage {\n        [*] --> TIFF\n        [*] --> BMP\n        [*] --> JPEG: 需要PXIPL库\n    }\n    \n    ImageCapture --> GPIOControl: 触发控制\n    GPIOControl --> ImageCapture: 响应控制\n    \n    ImageStorage --> [*]: 程序结束\n    \n    note right of ImageCapture\n        支持多种视频格式:\n        - RS-170\n        - NTSC\n        - PAL\n        等\n    end note\n    \n    note right of DataProcessing\n        支持多种颜色空间:\n        - RGB\n        - YCrCb\n        - BSH\n    end note\n\n```\n\n\n2. 代码结构分析:\n\n主要功能模块:\n1. 初始化模块:\n- `do_open()`: 打开并初始化采集卡\n- `signaled()`: 信号处理函数，确保程序异常退出时正确关闭设备\n\n2. 图像采集模块:\n- `do_video1()`: 单帧图像采集\n- `do_videosequence()`: 序列图像采集\n- `do_imsize()`, `do_vidsize()`: 获取图像和视频参数\n\n3. 数据处理模块:\n- `color_display1()` - `color_display8()`: 彩色图像处理和显示\n- `bw_display1()`, `bw_display2()`: 黑白图像处理和显示\n\n4. 图像存储模块:\n- `do_savetif()`: 保存TIFF格式\n- `do_savebmp()`: 保存BMP格式\n- `do_savejpeg()`: 保存JPEG格式\n\n5. GPIO控制模块:\n- `do_extout1()`, `do_extout2()`: 输出信号控制\n- `do_extin1()`, `do_extin2()`: 输入信号处理\n\n代码的主要特点是模块化设计，每个功能都被封装在独立的函数中，便于维护和扩展。同时通过用户交互机制，可以逐步演示和验证各个功能模块的工作情况。",
+          "status": "success"
+        },
+        {
+          "filename": "realtime_capture.c",
+          "fileHash": "1c6f427062f2ffc93fc743530243e09945fa8e2481e382d272132ebfbc8687ed",
+          "result": " 我来帮你分析这段代码。\n\n1. 功能概述：\n这是一个使用XCLIB库实现的黑白实时视频采集程序。其主要功能包括：\n- 连接和初始化PIXCI视频采集卡\n- 实时采集黑白视频并显示\n- 计算并显示实时帧率\n- 支持用户交互（按Enter键停止采集）\n- 错误处理和资源管理\n\n核心用途是为视频采集系统提供一个基础的黑白视频采集功能，可应用于工业相机、视觉检测等场景。\n\n2. 代码结构分析：\n\n\n\n\n```mermaid \nstateDiagram-v2\n    [*] --> 初始化: 程序启动\n    初始化 --> 打开设备: do_open()\n    打开设备 --> 配置设备: show_image_info()\n    配置设备 --> 实时采集: do_realtime_capture()\n    \n    state 实时采集 {\n        [*] --> 开始采集: pxd_goLive()\n        开始采集 --> 帧采集循环: while(!kbhit())\n        帧采集循环 --> 帧采集循环: 计算帧率\n        帧采集循环 --> 停止采集: Enter键\n        停止采集 --> [*]: pxd_goUnLive()\n    }\n    \n    实时采集 --> 关闭设备: do_close()\n    关闭设备 --> [*]: 程序结束\n\n```\n\n\n关键函数说明：\n1. `do_open()`: 负责初始化和打开PIXCI采集卡，设置驱动参数和视频格式。\n\n2. `show_image_info()`: 显示采集图像的基本信息，包括分辨率、缓冲区数量、像素位深度和内存使用情况。\n\n3. `do_realtime_capture()`: 程序的核心函数，实现：\n   - 启动实时视频流采集\n   - 实时计算和显示帧率\n   - 监控用户输入以停止采集\n   - 错误检测和处理\n\n4. `do_close()`: 负责释放资源，关闭采集卡。\n\n5. `signaled()`: 信号处理函数，确保程序异常退出时能正确关闭设备。\n\n程序通过预处理指令（#define）支持灵活配置，包括设备单元数量（UNITS）、视频格式（FORMAT/FORMATFILE）等。整体结构清晰，具有良好的错误处理机制和用户交互界面。",
+          "status": "success"
+        },
+        {
+          "filename": "sequence_capture.c",
+          "fileHash": "f7ad55d6caa7b50866bdace9a8f2ed99427039e46de29f05e0f735e43a0ceedd",
+          "result": " 我将按照结构化框架分析这段代码。\n\n1. 功能概述：\n这是一个基于XCLIB库实现的图像采集和实时显示程序。主要功能包括：\n- 通过EPIX PIXCI帧采集卡连续采集图像\n- 实时显示采集到的灰度图像，并自动缩放适应窗口大小\n- 显示实时帧率信息\n- 支持通过关闭窗口或Ctrl+C优雅退出\n- 具备完整的错误处理和资源清理机制\n\n2. 代码结构分析：\n关键函数和模块包括：\n- 初始化相关：`initialize_camera()`, `create_display_window()`\n- 图像采集和显示：`capture_and_display_sequence()`\n- 窗口处理：`WindowProc()`, `process_messages()`\n- 资源管理：`cleanup()`, `create_bitmap_info()`\n- 信号处理：`signaled()`\n\n让我用Mermaid流程图展示程序的主要执行流程：\n\n\n\n\n```mermaid \nflowchart TD\n    A[程序启动] --> B[注册信号处理器]\n    B --> C[创建显示窗口]\n    C --> D[初始化相机]\n    D --> E[显示图像参数]\n    E --> F[进入图像采集循环]\n    F --> G{采集一帧图像}\n    G --> H[等待采集完成]\n    H --> I[读取图像数据]\n    I --> J[更新显示]\n    J --> K[计算显示帧率]\n    K --> L{继续采集?}\n    L -->|是| G\n    L -->|否| M[清理资源]\n    M --> N[程序结束]\n    \n    O[用户关闭窗口] -.-> L\n    P[Ctrl+C信号] -.-> L\n\n```\n\n\n代码的主要特点：\n1. 使用全局变量管理窗口句柄、显示缓冲区等资源，便于在不同函数间共享状态\n2. 采用Windows API创建窗口并显示图像，支持实时刷新和缩放\n3. 实现了完整的错误处理机制，包括硬件初始化、内存分配、图像采集等各个环节\n4. 使用8位灰度图像格式，通过位图信息头(BITMAPINFO)管理图像显示参数\n5. 程序运行时会持续显示当前帧率，每秒更新一次\n\n这是一个结构清晰、功能完整的工业相机图像采集程序，适合用于实时图像采集和显示的场景。您对代码的哪部分特别感兴趣？我可以为您详细解释具体的实现细节。",
+          "status": "success"
+        }
+      ]
+    }
+  }
+}
\ No newline at end of file
